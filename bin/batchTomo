#!/usr/bin/env lua
--[[===========================================================================#
# This is a program to run tomoAuto in batch to align and reconstruct a large  #
# number of raw image stacks.                                                  #
#------------------------------------------------------------------------------#
# Author: Dustin Morado                                                        #
# Written: March 24th 2014                                                     #
# Contact: dustin.morado@uth.tmc.edu                                           #
#===========================================================================--]]
local tomoAutoDir = os.getenv('TOMOAUTOROOT')
package.cpath = package.cpath .. ';' .. tomoAutoDir .. '/lib/?.so;'
package.path  = package.path  .. ';' .. tomoAutoDir .. '/lib/?.lua;'

local lfs  = require 'lfs'
local yago = require 'yago'
local sString = 'c,   d_,      f_,  g,   h,    i_,   l_,     m_,   '
local lString = 'ctf, defocus, fid, gpu, help, iter, config, mode, '
local sString = sString .. ' n_,  p_,      s,    t,      z_'
local lString = lString .. ' num, procnum, SIRT, tomo3d, thickness'
local status, arg, Opts = pcall(yago.getOpt, arg, sString, lString)

if not status then
   io.stderr:write(arg)
   return 1
end

local fid = Opts.f_

local parallel = tonumber(Opts.n_) or 1
parallel = parallel > 4 and 4 or parallel

Opts.f_ = nil
Opts.n_ = nil

local fileList = {}
for file in lfs.dir('.') do
   if file:find('%w+%.st$') then
      table.insert(fileList, file)
   end
end
local runString = tomoAutoDir .. '/bin/'
local runString = runString .. 'tomoAuto '
for k,v in pairs(Opts) do
   if v then
      runString = runString .. '-' .. k:sub(1,1) .. ' '
      if v ~= true then
         runString = runString .. v .. ' '
      end
   end
end
local batchString = ''
for i = 1, #fileList do
   batchString = batchString .. runString .. ' ' .. fileList[i] .. ' ' .. fid .. '&'
   if i % parallel == 0 then
      batchString = batchString .. 'wait'
      os.execute(batchString)
      batchString = ''
   elseif i == #fileList then
      batchString = batchString .. 'wait'
      os.execute(batchString)
      batchString = ''
   end
end
